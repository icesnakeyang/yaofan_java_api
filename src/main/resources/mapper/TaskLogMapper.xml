<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gogoyang.yaofan.meta.taskLog.dao.TaskLogDao">

    <resultMap id="taskLogMap" type="com.gogoyang.yaofan.meta.taskLog.entity.TaskLog">
        <result property="taskLogId" column="task_log_id"/>
        <result property="taskId" column="task_id"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createUserName" column="create_user_name"/>
        <result property="createTime" column="create_time"/>
        <result property="readTime" column="read_time"/>
        <result property="readUserId" column="read_user_id"/>
        <result property="readUserName" column="read_user_name"/>
    </resultMap>

    <!--创建一条任务日志-->
    <insert id="createTaskLog"
            useGeneratedKeys="true"
            keyProperty="ids"
            parameterType="com.gogoyang.yaofan.meta.taskLog.entity.TaskLog">
      insert into task_log
      (task_log_id, task_id, create_user_id, content, create_time)
      values
      (#{taskLogId}, #{taskId}, #{createUserId}, #{content}, #{createTime})
    </insert>

    <select id="listTaskLog" parameterType="map"
            resultMap="taskLogMap">
        select task_log.ids, task_log_id,task_id,create_user_id,create_user.name as create_user_name,content,
        task_log.create_time, read_time, read_user_id, read_user.name as read_user_name from (task_log
        left join user_info create_user on create_user_id=user_id)
        left join user_info read_user on read_user_id=read_user.user_id
        where 1=1
        and task_id=#{taskId}
        order by ids desc
    </select>

    <update id="setTaskLogReadTime" parameterType="map">
        update task_log set
        read_time=#{readTime},
        read_user_id=#{readUserId}
        where task_id = #{taskId}
        and read_time is null
        <![CDATA[
            and create_user_id <> #{readUserId}




        ]]>
    </update>

    <!--统计当前用户未阅读的日志总数-->
    <select id="totalTaskLogUnread" parameterType="map" resultType="java.lang.Integer">
        select count(*) as total_unread
        from task_log
        where 1 = 1
        and task_id = #{taskId}
        and read_time is null
        <![CDATA[
        and create_user_id <> #{readUserId}


        ]]>
    </select>

    <!--统计任务的日志总数-->
    <select id="totalTaskLog" parameterType="map" resultType="java.lang.Integer">
        select count(*) as total_log
        from task_log
        where task_id = #{taskId}
    </select>

    <!--删除任务日志-->
    <delete id="deleteTaskLog" parameterType="java.lang.String">
        delete from task_log
        where task_log_id=#{taskLogId}
    </delete>

    <!--查询任务日志-->
    <select id="getTaskLogByLogId" parameterType="java.lang.String" resultMap="taskLogMap">
        select * from task_log
        where task_log_id=#{taskLogId}
    </select>
</mapper>