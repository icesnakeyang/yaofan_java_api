<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gogoyang.yaofan.meta.task.dao.TaskDao">

    <resultMap id="taskMap" type="com.gogoyang.yaofan.meta.task.entity.Task">
        <result property="taskId" column="task_id"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="createUserName" column="create_user_name"/>
        <result property="createTime" column="create_time"/>
        <result property="endTime" column="end_time"/>
        <result property="partyBId" column="party_b_id"/>
        <result property="partyBName" column="party_b_name"/>
        <result property="contractTime" column="contract_time"/>
        <result property="status" column="task_status"/>
        <result property="teamId" column="team_id"/>
    </resultMap>

    <!--创建一个任务-->
    <insert id="createTask"
            useGeneratedKeys="true"
            keyProperty="ids"
            parameterType="com.gogoyang.yaofan.meta.task.entity.Task">
      insert into task
      (task_id, create_user_id, point, title, detail, create_time, end_time, status, team_id)
      values
      (#{taskId}, #{createUserId}, #{point}, #{title}, #{detail}, #{createTime}, #{endTime},#{status}, #{teamId})
    </insert>

    <select id="listBiddingTasks" parameterType="map" resultMap="taskMap">
        select task.ids,
        task_id,
        create_user_id,
        create_user.name as party_a_name,
        point,
        title,
        task.create_time,
        end_time,
        party_b_id,
        party_b.name as party_b_name,
        contract_time,
        task.status as task_status,
        team_id
        from (task
        left join user_info create_user on create_user_id = user_id)
        left join user_info party_b on party_b_id = party_b.user_id
        where 1=1
        <if test="userId!=null">
            <![CDATA[
                and create_user_id<>#{userId}
            ]]>
        </if>
        and task.status='BIDDING'
        <if test="teams!=null">
            and team_id in
            <foreach collection="teams" item="team"
                     index="index" open="(" close=")" separator=",">
                #{team}
            </foreach>
        </if>
    </select>

    <select id="getTaskByTaskId" parameterType="java.lang.String" resultMap="taskMap">
        select task.ids,
       task_id,
       create_user_id,
       create_user.name as create_user_name,
       point,
       title,
       detail,
       task.create_time,
       end_time,
       party_b_id,
       party_b.name     as party_b_name,
       contract_time,
       task.status as task_status,
       team_id
        from (task
        left join user_info create_user on create_user.user_id = task.create_user_id)
       left join user_info party_b on party_b.user_id = task.party_b_id
        where task_id=#{taskId}
    </select>

    <!--统计重复的任务数量-->
    <select id="totalTaskDuplicate" parameterType="map" resultType="java.lang.Integer">
        select count(*) as total
        from task
        where 1 = 1
        and title =#{title}
        and detail = #{detail}
        and create_user_id = #{createUserId}
        and status = #{status}
    </select>

    <!--修改任务为抢单成功-->
    <update id="updateTaskDeal" parameterType="map">
        update task set
        party_b_id=#{partyBId},
        contract_time=#{contractTime},
        status=#{status}
        where task_id=#{taskId}
    </update>

    <select id="listMyTasks" parameterType="map"
            resultMap="taskMap">
        select task.ids,
       task_id,
       create_user_id,
       create_user.name as party_a_name,
       point,
       title,
       task.create_time,
       end_time,
       party_b_id,
       party_b.name     as party_b_name,
       contract_time,
       task.status      as task_status,
       team_id
from (task
    left join user_info create_user on create_user_id = user_id)
         left join user_info party_b on party_b_id = party_b.user_id
where 1 = 1
  and (create_user_id = #{userId}
    or party_b_id = #{userId})
    order by end_time
    </select>

    <update id="updateTaskStatus" parameterType="com.gogoyang.yaofan.meta.task.entity.Task">
        update task set
        status=#{status}
        where task_id=#{taskId}
    </update>
</mapper>