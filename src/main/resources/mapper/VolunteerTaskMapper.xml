<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gogoyang.yaofan.meta.volunteer.task.dao.VolunteerTaskDao">

    <resultMap id="volunteerTaskMap" type="com.gogoyang.yaofan.meta.volunteer.task.entity.VolunteerTask">
        <result property="volunteerTaskId" column="volunteer_task_id"/>
        <result property="createTime" column="create_time"/>
        <result property="createUserId" column="create_user_id"/>
        <result property="startTime" column="start_time"/>
        <result property="createUserName" column="create_user_name"/>
    </resultMap>

    <!--创建一个义工任务-->
    <insert id="createVolunteerTask"
            useGeneratedKeys="true"
            keyProperty="ids"
            parameterType="com.gogoyang.yaofan.meta.volunteer.task.entity.VolunteerTask">
      insert into volunteer_task
      (volunteer_task_id, create_time, create_user_id, title,
       content, start_time, pid, status)
      values
      (#{volunteerTaskId}, #{createTime}, #{createUserId}, #{title},
       #{content}, #{startTime}, #{pid}, #{status})
    </insert>

    <!--读取义工任务列表-->
    <select id="listVolunteerTask" parameterType="map" resultMap="volunteerTaskMap">
        select volunteer_task.ids,
        volunteer_task_id,
        volunteer_task.create_time,
        create_user_id,
        name as create_user_name,
        title,
        content,
        start_time,
        pid,
        views,
        applies,
        volunteer_task.status
        from volunteer_task
        left join user_info create_user on create_user_id=user_id
        where 1=1
and volunteer_task.status='ACTIVE'
order by create_user.ids desc
        limit #{offset},#{size}
    </select>

    <!--读取我的义工任务列表-->
    <select id="listMyVolunteerTask" parameterType="map" resultMap="volunteerTaskMap">
        select task.ids,
        task.volunteer_task_id,
        task.create_time,
        create_user_id,
        name as create_user_name,
        title,
        content,
        start_time,
        pid,
        views,
        applies,
        task.status,
        apply_user_id,
        process_result
        from volunteer_task task
        left join user_info create_user on create_user_id=user_id
        left join volunteer_apply apply on task.volunteer_task_id=apply.volunteer_task_id
        where 1=1
        <choose>
            <when test="userId!=null">
                and (create_user_id=#{userId}
                or apply_user_id=#{userId})
            </when>
        </choose>
        <choose>
            <when test="status!=null">
                and process_result=#{status}
            </when>
        </choose>
        order by ids desc
        limit #{offset},#{size}
    </select>

    <!--根据volunteerTaskId查询义工任务详情-->
    <select id="getVolunteerTaskDetail" parameterType="java.lang.String"
            resultMap="volunteerTaskMap">
        select volunteer_task.ids,
       volunteer_task_id,
       volunteer_task.create_time,
       create_user_id,
       name as create_user_name,
       title,
      content,
       start_time,
       pid,
       views,
       applies,
       volunteer_task.status
       from volunteer_task
left join user_info create_user on create_user_id=user_id
where volunteer_task_id=#{volunteerTaskId}
    </select>

    <!--根据volunteerTaskId查询义工任务，不包括详情-->
    <select id="getVolunteerTaskTiny" parameterType="java.lang.String"
            resultMap="volunteerTaskMap">
        select * from volunteer_task
        where volunteer_task_id=#{volunteerTaskId}
    </select>

    <!--统计我的所有义工任务数量-->
    <select id="totalMyVolunteerTasks" parameterType="map" resultType="java.lang.Integer">
        select count(*) as total from volunteer_task task
        left join volunteer_apply apply on task.volunteer_task_id=apply.volunteer_task_id
        where 1=1
        and (create_user_id=#{createUserId}
        or apply_user_id=#{applyUserId})
        and process_result='AGREE'
    </select>

    <!--设置义工任务状态-->
    <update id="setVolunteerTaskStatus" parameterType="map">
        update volunteer_task set
        status=#{status}
        where volunteer_task_id=#{volunteerTaskId}
    </update>
</mapper>